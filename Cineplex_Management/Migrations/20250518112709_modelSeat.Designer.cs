// <auto-generated />
using System;
using Cineplex_Management.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cineplex_Management.Migrations
{
    [DbContext(typeof(CineplexContext))]
    [Migration("20250518112709_modelSeat")]
    partial class modelSeat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cineplex_Management.Models.Hall", b =>
                {
                    b.Property<int>("HallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HallId"));

                    b.Property<int?>("Column")
                        .HasColumnType("int");

                    b.Property<string>("HallName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Row")
                        .HasColumnType("int");

                    b.HasKey("HallId")
                        .HasName("PK__HALL__7E60E214602EBDF7");

                    b.ToTable("HALL", (string)null);
                });

            modelBuilder.Entity("Cineplex_Management.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ProducerId")
                        .HasColumnType("int");

                    b.HasKey("MovieId")
                        .HasName("PK__Movie__4BD2941AB3599871");

                    b.ToTable("Movie", (string)null);
                });

            modelBuilder.Entity("Cineplex_Management.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("AccNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("Time")
                        .HasColumnType("time");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payment__9B556A38A8B29A4E");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("SalesId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("Cineplex_Management.Models.PaymentType", b =>
                {
                    b.Property<int>("PaymentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentTypeId"));

                    b.Property<string>("PaymentTypeName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("PaymentTypeId")
                        .HasName("PK__paymentT__BA430B35F7254E4C");

                    b.ToTable("paymentType", (string)null);
                });

            modelBuilder.Entity("Cineplex_Management.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE1AADCCF4E1");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("Cineplex_Management.Models.Sale", b =>
                {
                    b.Property<int>("SalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TotalPay")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("SalesId")
                        .HasName("PK__Sale__C952FB32D7424E5C");

                    b.ToTable("Sale", (string)null);
                });

            modelBuilder.Entity("Cineplex_Management.Models.SalesDetail", b =>
                {
                    b.Property<int>("SalesDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesDetailsId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("ShowDetailsId")
                        .HasColumnType("int");

                    b.HasKey("SalesDetailsId")
                        .HasName("PK__SalesDet__FE1B9AC55CAE1545");

                    b.HasIndex("SalesId");

                    b.HasIndex("ShowDetailsId");

                    b.ToTable("SalesDetails");
                });

            modelBuilder.Entity("Cineplex_Management.Models.SeatPlan", b =>
                {
                    b.Property<int>("SeatPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatPlanId"));

                    b.Property<int?>("HallId")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("SeatNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SeatPlanId")
                        .HasName("PK__SeatPlan__9C7E27CA1F9584FC");

                    b.HasIndex("HallId");

                    b.ToTable("SeatPlan", (string)null);
                });

            modelBuilder.Entity("Cineplex_Management.Models.Show", b =>
                {
                    b.Property<int>("ShowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowId"));

                    b.Property<int?>("HallId")
                        .HasColumnType("int");

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShowEnd")
                        .HasColumnType("datetime");

                    b.Property<string>("ShowName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("ShowStart")
                        .HasColumnType("datetime");

                    b.HasKey("ShowId")
                        .HasName("PK__Show__6DE3E0B26634086D");

                    b.HasIndex("HallId");

                    b.HasIndex("MovieId");

                    b.ToTable("Show", (string)null);
                });

            modelBuilder.Entity("Cineplex_Management.Models.ShowDetail", b =>
                {
                    b.Property<int>("ShowDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowDetailsId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("HallId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBooked")
                        .HasColumnType("bit");

                    b.Property<string>("SeatNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("ShowId")
                        .HasColumnType("int");

                    b.HasKey("ShowDetailsId")
                        .HasName("PK__ShowDeta__07FA4CECA16A51B5");

                    b.HasIndex("HallId");

                    b.HasIndex("ShowId");

                    b.ToTable("ShowDetails");
                });

            modelBuilder.Entity("Cineplex_Management.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CC4CCCE0B714");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Cineplex_Management.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId")
                        .HasName("PK__UserRole__3D978A3516B8DD19");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("Cineplex_Management.Models.Payment", b =>
                {
                    b.HasOne("Cineplex_Management.Models.PaymentType", "PaymentType")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentTypeId")
                        .HasConstraintName("FK__Payment__Payment__5629CD9C");

                    b.HasOne("Cineplex_Management.Models.Sale", "Sales")
                        .WithMany("Payments")
                        .HasForeignKey("SalesId")
                        .HasConstraintName("FK__Payment__SalesId__5535A963");

                    b.Navigation("PaymentType");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Cineplex_Management.Models.SalesDetail", b =>
                {
                    b.HasOne("Cineplex_Management.Models.Sale", "Sales")
                        .WithMany("SalesDetails")
                        .HasForeignKey("SalesId")
                        .HasConstraintName("FK__SalesDeta__Sales__4CA06362");

                    b.HasOne("Cineplex_Management.Models.ShowDetail", "ShowDetails")
                        .WithMany("SalesDetails")
                        .HasForeignKey("ShowDetailsId")
                        .HasConstraintName("FK__SalesDeta__ShowD__4D94879B");

                    b.Navigation("Sales");

                    b.Navigation("ShowDetails");
                });

            modelBuilder.Entity("Cineplex_Management.Models.SeatPlan", b =>
                {
                    b.HasOne("Cineplex_Management.Models.Hall", "Hall")
                        .WithMany("SeatPlans")
                        .HasForeignKey("HallId")
                        .HasConstraintName("FK__SeatPlan__HallId__5070F446");

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("Cineplex_Management.Models.Show", b =>
                {
                    b.HasOne("Cineplex_Management.Models.Hall", "Hall")
                        .WithMany("Shows")
                        .HasForeignKey("HallId")
                        .HasConstraintName("FK__Show__HallId__45F365D3");

                    b.HasOne("Cineplex_Management.Models.Movie", "Movie")
                        .WithMany("Shows")
                        .HasForeignKey("MovieId")
                        .HasConstraintName("FK__Show__MovieId__44FF419A");

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Cineplex_Management.Models.ShowDetail", b =>
                {
                    b.HasOne("Cineplex_Management.Models.Hall", "Hall")
                        .WithMany("ShowDetails")
                        .HasForeignKey("HallId")
                        .HasConstraintName("FK__ShowDetai__HallI__49C3F6B7");

                    b.HasOne("Cineplex_Management.Models.Show", "Show")
                        .WithMany("ShowDetails")
                        .HasForeignKey("ShowId")
                        .HasConstraintName("FK__ShowDetai__ShowI__48CFD27E");

                    b.Navigation("Hall");

                    b.Navigation("Show");
                });

            modelBuilder.Entity("Cineplex_Management.Models.UserRole", b =>
                {
                    b.HasOne("Cineplex_Management.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__UserRole__RoleId__3C69FB99");

                    b.HasOne("Cineplex_Management.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserRole__UserId__3B75D760");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cineplex_Management.Models.Hall", b =>
                {
                    b.Navigation("SeatPlans");

                    b.Navigation("ShowDetails");

                    b.Navigation("Shows");
                });

            modelBuilder.Entity("Cineplex_Management.Models.Movie", b =>
                {
                    b.Navigation("Shows");
                });

            modelBuilder.Entity("Cineplex_Management.Models.PaymentType", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Cineplex_Management.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Cineplex_Management.Models.Sale", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("SalesDetails");
                });

            modelBuilder.Entity("Cineplex_Management.Models.Show", b =>
                {
                    b.Navigation("ShowDetails");
                });

            modelBuilder.Entity("Cineplex_Management.Models.ShowDetail", b =>
                {
                    b.Navigation("SalesDetails");
                });

            modelBuilder.Entity("Cineplex_Management.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
